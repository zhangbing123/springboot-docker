<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.zb.springboot</groupId>
    <artifactId>springboot-docker</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springboot-docker</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>



            <!--&lt;!&ndash; docker的maven插件，官网 https://github.com/spotify/docker-maven-plugin &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--<version>0.4.13</version>-->

                <!--&lt;!&ndash;将Docker命令绑定到Maven阶段,也就是使用maven的package命令打包时自动构建镜像&ndash;&gt;-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>build-image</id>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->

                <!--<configuration>-->
                    <!--&lt;!&ndash;配置 Docker 的主机地址&ndash;&gt;-->
                    <!--<dockerHost>http://192.168.115.131:2375</dockerHost>-->

                    <!--&lt;!&ndash; 镜像名称 &ndash;&gt;-->
                    <!--<imageName>${project.artifactId}:latest</imageName>-->

                    <!--<baseImage>java</baseImage>-->

                    <!--<forceTags>true</forceTags>-->

                    <!--<imageTags>-->
                        <!--<imageTag>latest</imageTag>-->
                    <!--</imageTags>-->

                    <!--&lt;!&ndash;相当于Dokcerfile文件中的ENTRYPOINT ["java","-jar","/app.jar"]&ndash;&gt;-->
                    <!--<entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>-->

                    <!--<resources>-->
                        <!--<resource>-->
                            <!--<targetPath>/</targetPath>-->
                            <!--<directory>${project.build.directory}</directory>-->
                            <!--<include>${project.build.finalName}.jar</include>-->
                        <!--</resource>-->
                    <!--</resources>-->

                <!--</configuration>-->

            <!--</plugin>-->

        </plugins>
    </build>

</project>
